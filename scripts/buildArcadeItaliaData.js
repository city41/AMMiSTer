const path = require('path');
const fsp = require('node:fs/promises');
const fs = require('node:fs');
const { parse } = require('csv-parse/sync');
const fetch = require('node-fetch');

async function videoIdExists(videoId) {
	try {
		const response = await fetch(
			`https://www.youtube.com/oembed?url=http://www.youtube.com/watch?v=${videoId}&format=json`
		);

		const videoData = await response.json();
		console.log(JSON.stringify(videoData, null, 2));

		return !!videoData?.title;
	} catch {
		return null;
	}
}

async function getShortPlayVideoId(rawUrl, index, total, name) {
	if (index % 100 === 0) {
		console.log('videoId', index, '/', total);
	}

	if (rawUrl === '-') {
		return null;
	}

	const split = rawUrl.split('\n');

	for (const url of split) {
		const videoIdRegEx = /v=(.+)/;
		const match = videoIdRegEx.exec(url);
		const videoId = match?.[1].replace('shortplay', '');

		if (videoId && (await videoIdExists(videoId))) {
			return videoId;
		}
	}

	console.log('no published video found', name, rawUrl);
	return null;
}

async function main() {
	const data = await fsp.readFile(path.resolve(__dirname, 'arcadeItalia.csv'));
	const records = parse(data, {
		columns: true,
		skip_empty_lines: true,
		delimiter: ';',
	});

	let haveVideoCount = 0;

	const arcadeItaliaData = await records.reduce(async (accumP, r, i, a) => {
		const accum = await accumP;

		if (!r || !r.name) {
			return accum;
		}

		const videoId = await getShortPlayVideoId(
			r.url_shortplays,
			i,
			a.length,
			r.name
		);

		if (videoId) {
			haveVideoCount += 1;
		}

		accum[r.name] = {
			videoId,
			rating: Number(r.game_rate) || null,
		};

		return accum;
	}, {});

	console.log('have video count', haveVideoCount, records.length);

	const dataSrc = `
// auto generated by ${__filename}

type ArcadeItaliaMetadata = {
    videoId: string | null;
    rating: number | null;
};

const arcadeItaliaData: Record<string, ArcadeItaliaMetadata> = 
${JSON.stringify(arcadeItaliaData, null, 2)}
;

export { arcadeItaliaData };

`;

	const arcadeItaliaDataPath = path.resolve(
		'src/main/catalog/arcadeItaliaData.ts'
	);
	fs.writeFileSync(arcadeItaliaDataPath, dataSrc);
	console.log('arcadeItaliaDataPath written to', arcadeItaliaDataPath);
}

main()
	.then(() => {
		console.log('done');
	})
	.catch((e) => {
		console.log('error', e);
	});
